# Home Automation Configuration
# Non-sensitive settings (committed to git)
# Sensitive credentials go in .env

# Logging Configuration
logging:
  level: INFO              # DEBUG, INFO, NOTICE, WARNING, ERROR, CRITICAL
  file: null               # null = stdout (for systemd), or path to log file

# Flask Server Settings
server:
  host: 0.0.0.0           # Listen on all interfaces
  port: 5000
  debug: false
  require_auth: false
  log_level: INFO         # Flask-specific logging level

# Automation Settings
automations:
  dry_run: false          # Global dry-run mode for testing (can override with --dry-run flag)

# Device API Timeouts (seconds)
device_timeouts:
  connect: 5              # Initial connection/auth
  status: 5               # Status queries
  control: 10             # Control operations (turn on/off, set temp, etc.)

# Temperature Policy (centralized control for all HVAC)
temperatures:
  comfort: 70             # Active living temperature (whole house + bedroom during day)
  bedroom_sleep: 66       # Bedroom at night (active target)

  # ECO mode bounds - MUST be configured in Google Home app (cannot be set via API)
  # ECO mode is used for away/sleep: Nest heats if temp < eco_heat, cools if temp > eco_cool
  # Between bounds: No HVAC activity (energy saving)
  # Current bounds can be viewed on dashboard when in ECO mode

  # Smart mode selection thresholds
  heat_below: 65          # Use HEAT when outdoor temp < 65°F
  cool_above: 75          # Use COOL when outdoor temp > 75°F
  # Between 65-75°F: Use HEATCOOL (auto mode, let thermostat decide)

# Time-based Schedule
schedule:
  sleep_time: "22:30"     # Bedtime (switch to sleep mode)
  wake_time: "05:00"      # Wake time (switch to comfort mode)

# Tesla integration deferred - see docs/TESLA_STATUS.md
# tesla:
#   email: "user@example.com"
#   refresh_token: "${TESLA_REFRESH_TOKEN}"

nest:
  project_id: "${NEST_PROJECT_ID}"
  client_id: "${NEST_CLIENT_ID}"
  client_secret: "${NEST_CLIENT_SECRET}"
  refresh_token: "${NEST_REFRESH_TOKEN}"
  device_id: "${NEST_DEVICE_ID}"
  # Temperature targets moved to centralized 'temperatures:' section above

locations:
  home:
    lat: 45.70766068698601
    lng: -121.53682676696884
    zip: "97031"
    city: "Hood River"
    state: "OR"
    radius_meters: 150  # Geofence for "at home"
  milwaukie:
    address: "Milwaukie, OR"
    lat: 45.4465
    lng: -122.6393

notifications:
  service: "ntfy"
  ntfy:
    topic: "py_home_7h3k2m9x"

tapo:
  username: "${TAPO_USERNAME}"
  password: "${TAPO_PASSWORD}"
  outlets:
    - name: "Livingroom Lamp"
      ip: "192.168.50.162"
    - name: "Bedroom Left Lamp"
      ip: "192.168.50.93"
    - name: "Bedroom Right Lamp"
      ip: "192.168.50.143"
    - name: "Heater"
      ip: "192.168.50.135"

sensibo:
  api_key: "${SENSIBO_API_KEY}"
  bedroom_ac_id: "${SENSIBO_AC_ID}"

alen:
  api_key: "${TUYA_API_KEY}"
  api_secret: "${TUYA_API_SECRET}"
  devices:
    bedroom:
      device_id: "${TUYA_DEVICE_ID_BEDROOM}"
      name: "Bedroom 75i"
    living_room:
      device_id: "${TUYA_DEVICE_ID_LIVING}"
      name: "Living Room 75i"
  thresholds:
    pm25_good: 25
    pm25_moderate: 50
    pm25_unhealthy: 100

roborock:
  username: "${ROBOROCK_USERNAME}"
  password: "${ROBOROCK_PASSWORD}"

github:
  token: "${GITHUB_TOKEN}"
  repo: "cyneta/py_home"
  todo_path: "TODO.md"

checkvist:
  username: "${CHECKVIST_USERNAME}"
  api_key: "${CHECKVIST_API_KEY}"
  lists:
    work: 123456
    personal: 789012

google_maps:
  api_key: "${GOOGLE_MAPS_API_KEY}"

openweather:
  api_key: "${OPENWEATHER_API_KEY}"
  units: "imperial"  # or "metric"
  zip_code: "97202,us"  # Default location (Portland, OR)

tempstick:
  api_key: "${TEMPSTICK_API_KEY}"
  sensor_id: "${TEMPSTICK_SENSOR_ID}"  # Format: TS00XXXXXX

presence:
  # Network-based presence detection (backup to iOS location)
  devices:
    primary:
      name: "Matt's iPhone"
      ip: "192.168.50.189"  # Get from: Settings → WiFi → (i) → IP Address
      # mac: "32:46:F1:EE:AA:33"  # Commented out - ping method uses IP only
      method: "ping"  # ping, arp, or auto (ping is most reliable for iPhones)

    # Add more devices if needed
    # ipad:
    #   name: "Matt's iPad"
    #   ip: "192.168.1.51"
    #   mac: "BB:CC:DD:EE:FF:00"
    #   method: "auto"

# Automation Settings
automation:
  tesla_preheat:
    cold_threshold_f: 40
    min_battery_percent: 30
    target_temp_f: 72

  grow_light:
    on_time: "06:00"
    off_time: "20:00"
